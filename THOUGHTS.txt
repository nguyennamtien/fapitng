TO DO
-----

* Merge hook_element_info() implementations with the form element classes.
* Implement AJAX.
* Process attached files.
* Batch API integration?
* Validate elements with predefined options (select, radio(s) and checkbox(es))
* Study (and implement parts of?) http://drupal.org/node/165104 and http://www.gliffy.com/pubdoc/1508856/L.png.
* Make multi-step forms as easy to handle as possible.
* Add flags to fapitng_Form for every handling stage to indicate if that stage has been executed.
* Store form include files. See drupal_retrieve_form().


THOUGHTS OF A CODING ATHEIST
----------------------------

* Elements can accidentally be changed in places like theme functions. This can affect a form's behavior. How do we solve this? Lock all properties? Pass a cloned element on to the theme system? What about memory implications?
* Do we need #after_build or can hook_form_BUILD_CALLBACK_alter() and $elementstng_Element->expand_callbacks() achieve the same?
* Do we need two tokens (general token and cache token)? Can't we just use one?
* What if we let FAPI work with data type elements first, and render them into actual input types depending on the output? E.g. a certain element needs to be text or an integer. In a later stage it needs to be decided if a text element is rendered as a textarea, a password input or a textfield. We'd need to remove view (as in MVC's view) code from expand functions.
* Why should modules be able to decide where an element's title is rendered (before or after)? They shouldn't mess with output AT ALL. See #title_display.
* Do we need $old_form as used in drupal_rebuild_form()?


WHAT'S CONVERTED?
-----------------

* Functions
  * drupal_prepare_form()
  * system_element_info()
  * _form_button_was_clicked()
  * _form_element_triggered_scripted_submission()
* Caching
* Hook_forms() has been replaced by form arguments and multiple build callbacks.
* Hook_form_BASE_FORM_ID_alter() and hook_form_FORM_ID_alter() have been replaced by hook_form_BUILD_CALLBACK_alter().
* #process has been replaced by the 'expand' property.
* #tree and #parents have been replaced by fapitng_FormElement::parent, which is a reference to the parent element or form.
* fapitng_Form now contains all properties from $form_state, except those defined in form_state_keys_no_cache(), which are located in fapitng_Form::state.


WHAT'S NEW?
-----------

* Prepopulation (http://drupal.org/project/prepopulate)
* More context awareness, because form elements can access their parent items and the form itself directly.


WHAT'S GONE?
------------

* _form_set_class()
* element_children()