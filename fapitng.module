<?php
// $Id$

/**
 * @file
 * Drupal's form handling API.
 *
 * @see fapitng_Form::populate()
 * @see fapitng_Form::construct()
 * @see fapitng_Form::cacheGet()
 * @see fapitng_Form::build()
 * @see elementstng_Element::expand()
 * @see elementstng_Element::render()
 * @see fapitng_Form::validate()
 * @see fapitng_FormBase::submit()
 *
 * Form handling has the following stages:
 * CONSTRUCTION
 * - Receive
 *   The form receives client input.
 *
 * - Cache get
 *   Load the previously constructed form from the cache if possible.
 *
 * or
 *
 * - Prepare
 *   Fill a form with all the necessary default elements.
 * - Build
 *   This is where all information about the form is gathered. No form logic is
 *   being executed yet.
 * - Expand
 *   This is the first layer with form logic to expand the form's
 *   functionality, i.e. convert a password confirm element to two separate
 *   fields with extra validation.
 * )
 * - Populate
 *   Fill input elements and request data with client input.
 * - Cache set
 *   Cache the constructed form.
 * USER INTERACTION (Optional. These stages are skipped when submitting a form
 * programmatically.)
 * - Render
 *   Make a form ready for display on a screen. This stage is passed when
 *   submitting a form programmatically.
 * - CONSTRUCTION
 *   Reconstruct the form as described above.
 * - Validate
 *   Check user input for a rendered form. This stage is passed when submitting
 *   a form programmatically.
 * PROCESSING
 * - Submit
 *   Process input after the form has been submitted. Data can be stored or
 *   actions taken.
 */

/**
 * Implement hook_theme().
 */
function fapitng_theme() {
  $file = array(
    'file' => 'fapitng.theme.inc',
    'path' => drupal_get_path('module', 'fapitng') . '/includes/',
  );
  $theme['fapitng_form'] = $file + array(
    'variables' => array(
      'element' => NULL,
    ),
  );
  $element_names = array(
    'element',
    'label',
    'required_marker',
    'fieldset',
    'vertical_tabs',
    'textfield',
    'textarea',
    'tableselect',
    'button',
    'image_button',
    'select',
    'radio',
    'radios',
    'checkbox',
    'checkboxes',
    'file', 
    'hidden',
  );
  foreach ($element_names as $element_name) {
    $theme["fapitng_form_$element_name"] = $file + array(
      'variables' => array(
        'element' => NULL,
      ),
    );
  }

  return $theme;
}

/**
 * Get a Drupal form for display.
 *
 * @param $form_id string
 *   The identifier for this form. Does not necessarily equal the HTML ID.
 * @param $build_callbacks array
 *   The names of the form builder functions.
 * @param ...
 *   Additional arguments to pass on to the build callbacks.
 *
 * @return string
 */
function fapitng_form($form_id, array $build_callbacks) {
  $arguments = array_slice(func_get_args(), 2);

  // @todo Remove when moving to core.
  elementstng();
  module_load_include('inc', 'fapitng', '/includes/fapitng.elements');

  $form = new fapitng_Form($form_id, $build_callbacks, $arguments);
  $form->construct();

  if ($form->request['submitted']) {
    if ($form->programmed || !$form->programmed && $form->validate()) {
      $form->submit();
      // @todo Add destination/redirect support.
    }
  }

  return $form->render();
}

/**
 * Page callback to display a form.
 */
function fapitng_form_page($form_id, array $build_callbacks) {
  return array(
    '#markup' => fapitng_form($form_id, $build_callbacks),
  );
}